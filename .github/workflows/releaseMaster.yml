name: "[master] Release"

on:
  push:
    branches:
      - "master"
    paths:
      - "package.json"
  workflow_dispatch:  # Allow manual triggering

jobs:
  Build:
    uses: ./.github/workflows/build.yml

  Release:
    name: Release latest on GitHub
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          name: luna-artifacts
          path: ./dist/

      - name: Get version from package.json
        run: |
          VERSION=$(jq -r .version ./dist/package.json)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Publish dev release on GitHub
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ env.VERSION }}
          prerelease: false
          title: Release ${{ env.VERSION }}
          files: ./dist/luna.zip

  Update-Hashes:
    name: Update Nix Hashes
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'push' && github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Nix
        uses: cachix/install-nix-action@v20

      - name: Get current version
        id: version
        run: |
          if [ -f "package.json" ]; then
            VERSION=$(jq -r .version package.json)
          else
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.6.13-beta")
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Build and extract correct hashes
        id: extract_hashes
        run: |
          # Step 1: Get the source hash first
          echo "Step 1: Getting source hash..."
          
          # Remove only the source hash
          sed -i '/src = fetchFromGitHub {/,/}/ s|hash = "[^"]*"|hash = ""|' nix/package.nix
          
          # Build to get source hash error
          nix build .#injection 2>&1 | tee build.log || true
          
          # Extract the expected source hash
          ACTUAL_SOURCE_HASH=$(grep -o "got:.*sha256-[a-zA-Z0-9+/]*=" build.log | head -1 | cut -d':' -f2 | xargs)
          echo "actual_source_hash=$ACTUAL_SOURCE_HASH" >> $GITHUB_OUTPUT
          echo "Source hash: $ACTUAL_SOURCE_HASH"
          
          # Step 2: Update source hash and get pnpm hash
          echo "Step 2: Getting pnpm hash..."
          
          # Update source hash
          sed -i '/src = fetchFromGitHub {/,/}/ s|hash = ""|hash = "'"$ACTUAL_SOURCE_HASH"'"|' nix/package.nix
          
          # Remove pnpm hash
          sed -i '/pnpmDeps = pnpm.fetchDeps {/,/}/ s|hash = "[^"]*"|hash = ""|' nix/package.nix
          
          # Build to get pnpm hash error
          nix build .#injection 2>&1 | tee build2.log || true
          
          # Extract the expected pnpm hash
          PNPM_HASH=$(grep -o "got:.*sha256-[a-zA-Z0-9+/]*=" build2.log | head -1 | cut -d':' -f2 | xargs)
          echo "pnpm_hash=$PNPM_HASH" >> $GITHUB_OUTPUT
          echo "PNPM hash: $PNPM_HASH"
          
          # Step 3: Update pnpm hash
          echo "Step 3: Updating both hashes..."
          
          # Update pnpm hash
          sed -i '/pnpmDeps = pnpm.fetchDeps {/,/}/ s|hash = ""|hash = "'"$PNPM_HASH"'"|' nix/package.nix
          
          echo "Hashes updated!"

      - name: Test the updated package.nix
        run: |
          echo "Testing if the package builds with updated hashes..."
          nix build .#injection --print-build-logs
          echo "âœ… Build successful!" # Exits before this if build fails

      - name: Commit updated hashes
        if: success()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: update nix hashes for ${{ steps.version.outputs.version }}"
          file_pattern: nix/package.nix
          branch: ${{ github.head_ref || 'master' }}
